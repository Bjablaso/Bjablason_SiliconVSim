plugins {
    id "java"
    id "checkstyle"
    id "com.github.spotbugs" version "5.0.13"
    id  'jacoco'
    id   'application'
}

group = 'com.beginsecure'
version = '1.0-SNAPSHOT'

application {
  mainClass = 'VSim.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    implementation files('cls/') // Include custom local class files
}

test {
    useJUnitPlatform()
}

checkstyle {
    ignoreFailures = true
    showViolations = false
    configFile = file('config/checkstyle/checkstyle.xml') // Path to Checkstyle config
    toolVersion = '8.8'

}

tasks.withType(Checkstyle).configureEach {
    source = fileTree('src/main/java')
    include '**/*.java'
    reports {
        xml.required.set(false)
        html.required.set(true)
    }
}

spotbugs {
    toolVersion = '4.8.4' // Adjusted for SpotBugs compatibility
    ignoreFailures = true
    showProgress = true
    effort = 'max'
    reportLevel = 'low'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    dependsOn tasks.compileJava
   // source = fileTree('src/main/java')
    classes = fileTree('build/classes/java/main')
    reports {
        html.required.set(true)
        xml.required.set(false)
    }
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = '17' // Java 17 compatibility
    targetCompatibility = '17'
}

jacoco {
    toolVersion = "0.8.10" // Compatible JaCoCo version for Java 17
}

jacocoTestReport {
    dependsOn test // Ensure tests run before generating the report
    reports {
        xml.required.set(false)  // Correctly set to 'false'
        html.required.set(true)  // Enable HTML report
        csv.required.set(false)  // Disable CSV report
    }
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}
